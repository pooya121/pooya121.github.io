{"version":3,"file":"static/webpack/static\\development\\pages\\fa.js.063b6830bbc403cea93e.hot-update.js","sources":["webpack:///./src/pages/home/home-header/index.tsx"],"sourcesContent":["import { useRef } from 'react'\r\nimport Link from 'next/link'\r\nimport { useSpring, useChain, animated } from 'react-spring'\r\n\r\nimport { useLocale } from '@/util/hooks'\r\nimport { useTheme } from '@/styles'\r\nimport StylishAnchor from '@/components/stylishAnchor'\r\n\r\nimport WebsiteAnchor from './website-anchor'\r\nimport ThemeToggle from './theme-toggle'\r\nimport { GithubAnchor, StyledGithubIcon, EndContentWrap, HeaderWrap } from './styles'\r\n\r\ninterface Props {\r\n  children?: never\r\n}\r\n\r\nconst HomeHeader: React.FC<Props> = () => {\r\n  const theme = useTheme()\r\n  const { header, lang } = useLocale()\r\n\r\n  // refs will be assigned in  spring\r\n  const h1SpringRef = useRef(undefined as any)\r\n  const h2SpringRef = useRef(undefined as any)\r\n  const anchorSpringRef = useRef(undefined as any)\r\n\r\n  const h1Props = useSpring({\r\n    from: { opacity: 0, transform: 'translateY(-20px)' },\r\n    to: { opacity: 1, transform: 'translateY(0)' },\r\n    ref: h1SpringRef\r\n  })\r\n  const h2Style = useSpring({\r\n    from: { opacity: 0, transform: 'translateY(15px)' },\r\n    to: { opacity: 1, transform: 'translateY(0)' },\r\n    ref: h2SpringRef\r\n  })\r\n  const anchorStyle = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    ref: anchorSpringRef\r\n  })\r\n\r\n  const otherLnaguageHref = lang === 'fa' ? '/' : '/fa'\r\n\r\n  useChain([h1SpringRef, h2SpringRef, anchorSpringRef], [0, 0.4, 0.8])\r\n  return (\r\n    <HeaderWrap>\r\n      <div>\r\n        <animated.h1\r\n          style={h1Props}\r\n          css={{ margin: '0 0 10px 0', color: theme.colors.emphasized, fontSize: '2rem' }}\r\n        >\r\n          {header.title}\r\n        </animated.h1>\r\n        <animated.h2 style={h2Style} css={{ margin: 0, fontWeight: 'normal', fontSize: '1.5rem' }}>\r\n          {header.subTitle}\r\n        </animated.h2>\r\n      </div>\r\n      <EndContentWrap>\r\n        <animated.div css={{ fontSize: 12 }} style={anchorStyle}>\r\n          <div\r\n            css={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              marginBottom: 10,\r\n              '@media print': {\r\n                display: 'none'\r\n              }\r\n            }}\r\n          >\r\n            {/* <Link href={otherLnaguageHref}>\r\n              <StylishAnchor css={{ minWidth: 0 }} href={otherLnaguageHref}>\r\n                {lang === 'fa' ? 'English' : 'Farsi'}\r\n              </StylishAnchor>\r\n            </Link>\r\n            <ThemeToggle /> */}\r\n            {/* WebsiteAnchor will be rendered on print */}\r\n            <WebsiteAnchor />\r\n          </div>\r\n        </animated.div>\r\n        <GithubAnchor style={anchorStyle} href={header.viewOnGithub.url}>\r\n          {header.viewOnGithub.title} <StyledGithubIcon />\r\n        </GithubAnchor>\r\n      </EndContentWrap>\r\n    </HeaderWrap>\r\n  )\r\n}\r\n\r\nexport default HomeHeader\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}